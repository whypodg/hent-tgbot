import asyncio
import datetime
import logging

import pyrogram
import pyrogram_patch
from pyrogram import filters, types
from pyrogram_patch.router import Router

import utils
from utils import keyboards as kbs


other = Router()
other.name = "other"


@other.on_message(
	filters.command(commands=["start", "commands", "help", "menu", "—Å—Ç–∞—Ä—Ç", "–∫–æ–º–∞–Ω–¥—ã", "–ø–æ–º–æ—â—å", "–º–µ–Ω—é"], prefixes=["/", "!"])
)
async def start(client: pyrogram.Client, message: types.Message):
	out = f"üìÉ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é <a href='tg://user?id={utils.config['id']}'>Hentai Bot üåö</a>.</b>" \
		  f"\n–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —á–∞—Ç –ø–æ–º–æ—â–∏ —Å –±–æ—Ç–æ–º –∏–ª–∏ –∫ <a href='tg://user?id={utils.config['dev_id']}'>" \
		  f"—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É</a>.\n\n–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç, –∏–ª–∏ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è —Å—Å—ã–ª–∫–∏:" \
		  f"\n  ‚Ä¢ üìù <b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:</b> teletype.in/@whypodg/hent-cmd" \
		  f"\n  ‚Ä¢ üí¨ <b>–ß–∞—Ç:</b> @henttgchat" \
		  f"\n  ‚Ä¢ ‚ûï <b><a href='https://t.me/henttgbot?startgroup=start'>–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ —á–∞—Ç</a></b>"

	await utils.answer(
		message, out,
		disable_notification=True,
		reply_markup=kbs.kb_help
	)


@other.on_message(
	filters.command(commands=["ping", "–ø–∏–Ω–≥"], prefixes=["/", "!"])
)
async def ping(client: pyrogram.Client, message: types.Message):
	ev = (datetime.datetime.now() - message.date).microseconds / 1000
	s = datetime.datetime.now()
	msg = await utils.answer(
		message, "üåò"
	)
	e = round((datetime.datetime.now()-s).microseconds/1000, 2)

	sapi = datetime.datetime.now()
	await client.get_chat(message.chat.id)
	eapi = round((datetime.datetime.now()-sapi).microseconds/1000, 2)

	await utils.edit(
		msg, f"‚öô <b>–ü–æ–Ω–≥!</b>\n<b>Event latency: {int(ev)}ms | Handler took: {e}ms | API: {eapi}ms</b>",
		reply_markup=kbs.kb_ping
	)


@other.on_callback_query(filters.regex("ping"))
async def pingCB(client: pyrogram.Client, query: types.CallbackQuery):
	s = datetime.datetime.now()
	msg = await utils.edit(
		query.message, "üåò"
	)
	ev = (datetime.datetime.now() - msg.date).microseconds / 1000
	e = round((datetime.datetime.now()-s).microseconds/1000, 2)

	sapi = datetime.datetime.now()
	await client.get_chat(msg.chat.id)
	eapi = round((datetime.datetime.now()-sapi).microseconds/1000, 2)

	await utils.edit(
		msg, f"‚öô <b>–ü–æ–Ω–≥!</b>\n<b>Event latency: {int(ev)}ms | Handler took: {e}ms | API: {eapi}ms</b>",
		reply_markup=kbs.kb_ping
	)